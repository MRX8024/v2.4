[mcu tr]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625495535E1337-if00
canbus_uuid: 5e0c77a8474a
canbus_interface: can0

[trad_rack]
selector_max_velocity: 400
selector_max_accel: 40000
filament_max_velocity: 150
filament_max_accel: 20000
#toolhead_fil_sensor_pin: ^!PA1
lane_count: 6
lane_spacing: 17.0
servo_down_angle: 0
servo_up_angle: 160
servo_wait_ms: 500
selector_unload_length: 17.5
bowden_length: 1045
extruder_load_length: 45
hotend_load_length: 14
# toolhead_unload_length: 0
selector_sense_speed: 40.0
selector_unload_speed: 60.0
spool_pull_speed: 150
buffer_pull_speed: 200
# toolhead_sense_speed: 0
extruder_load_speed: 60
hotend_load_speed: 20
# toolhead_unload_speed: 0
load_with_toolhead_sensor: False
unload_with_toolhead_sensor: False
fil_homing_retract_dist: 20.0
# target_toolhead_homing_dist: 10
# target_selector_homing_dist: 10
#bowden_length_samples: 10
#pre_unload_gcode:
#post_load_gcode:
#pause_gcode:
#resume_gcode:

[stepper_tr_selector]
step_pin: tr:gpio2
dir_pin: tr:gpio1
enable_pin: !tr:gpio3
rotation_distance: 40
microsteps: 16
endstop_pin: ^tr:gpio15
#endstop_pin: tmc2209_stepper_tr_selector:virtual_endstop
position_min: 0
position_endstop: 0
position_max: 250   # (lane_count - 1) * lane_spacing
homing_speed: 150

[tmc2209 stepper_tr_selector]
uart_pin: tr:gpio0
interpolate: True
run_current: 1
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 1
# diag_pin: tr:gpio22
# driver_SGTHRS: 200

[stepper_tr_fil_driver]
step_pin: tr:gpio7
dir_pin: tr:gpio8
enable_pin: !tr:gpio6
rotation_distance: 35.24956970514286 #gr1.523809523809524 #Bmg 7.710843373
microsteps: 16
endstop_pin: ^tr:gpio20
position_min: -5000
position_endstop: 0
position_max: 5000
homing_positive_dir: False

[tmc2209 stepper_tr_fil_driver]
uart_pin: tr:gpio9
interpolate: true
run_current: 1
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0
# diag_pin: tr:gpio23
# driver_SGTHRS: 200

[servo tr_servo]
pin: tr:gpio21
maximum_servo_angle: 180
minimum_pulse_width: 0.000850 #0.000700
maximum_pulse_width: 0.002150

[temperature_sensor TradRack]
sensor_type: temperature_mcu
sensor_mcu: tr
min_temp: 0
max_temp: 150

[save_variables]
filename: ~/printer_data/config/.variables.stb

[gcode_macro ACTIVATE_EXTRUDER]
rename_existing: ACTIVATE_EXTRUDER.ORIG
gcode:
    {% set EXTRUDER = params.EXTRUDER|default('extruder')|lower|replace('extruder', '') %}
    {% if EXTRUDER == '' %}
        {% set EXTRUDER = '0' %}
    {% endif %}
    _PRINT_AR T="Changing to extruder {EXTRUDER}"
    TR_LOAD_TOOLHEAD LANE={EXTRUDER}

[delayed_gcode _LOAD_LANE]
initial_duration: 1
gcode:
## check if save_variables are defined
  {% if 'save_variables' not in printer %}
    {action_respond_info(
                         "CONFIG: ERROR\n"
                         "[save_variables] missing\n"
                         "This is needed to store variables to a file")}
  {% else %}
    {% if 'activelane' not in printer.save_variables.variables %}
        {action_respond_info("No TR active lane saved")}
    {% else %}
        {% set lane = printer.save_variables.variables.activelane %}
        TR_SET_ACTIVE_LANE LANE={lane}
        {action_respond_info("TR active lane is set to %d" % (lane))}
    {% endif %}
  {% endif %}

# [gcode_macro TR_LOAD_TOOLHEAD]
# description: Helper: Load filament on the selected lane to the toolhead
# rename_existing: TR_LOAD_TOOLHEAD_ORIG
# gcode:
#     TR_LOAD_TOOLHEAD_ORIG LANE={params.LANE}
#     {% set lane = params.LANE|default(0) %}
#     {action_respond_info("Loading %s lane" % (lane))}
#     SAVE_VARIABLE VARIABLE=activelane VALUE={lane}

[gcode_macro TR_LOAD_TOOLHEAD]
description: Helper: Load filament on the selected lane to the toolhead
rename_existing: TR_LOAD_TOOLHEAD_ORIG
gcode:
    {% if printer.save_variables.variables.activelane == -1 %}
        TR_HOME
    {% endif %}
        TR_LOAD_TOOLHEAD_ORIG LANE={params.LANE}
        {action_respond_info("Loading %s lane" % (params.LANE))}
        _PRINT_AR T="Loading lane {paramsLANE}"
        #_PRINT_AR T="Lane change to {paramsLANE} OK"
        SAVE_VARIABLE VARIABLE=activelane VALUE={params.LANE}

[gcode_macro LOAD_LANE]
gcode:
    {% if 'L' in params %}
        TR_LOCATE_SELECTOR
        TR_LOAD_LANE LANE={params.L}
    {% endif %}

# [gcode_macro LOAD_TOOLHEAD]
# gcode:
#     {% if 'L' in params %}
#         TR_LOCATE_SELECTOR
#         TR_LOAD_TOOLHEAD LANE={params.L}
#     {% endif %}

[gcode_macro UNLOAD_TOOLHEAD]
gcode:
    TR_UNLOAD_TOOLHEAD
    SAVE_VARIABLE VARIABLE=activelane VALUE=-1

[gcode_macro GO_TO_LANE]
gcode:
    {% if 'L' in params %}
        TR_LOCATE_SELECTOR
        TR_GO_TO_LANE LANE={params.L}
    {% endif %}

[gcode_macro SERVO_DOWN]
gcode:
    {% set F = params.F|default(0) %}
        TR_SERVO_DOWN FORCE={F}

[gcode_macro SERVO_UP]
gcode:
    TR_SERVO_UP

[gcode_macro SET_ACTIVE_LANE]
gcode:
    {% if 'L' in params %}
        TR_SET_ACTIVE_LANE LANE={params.L}
    {% endif %}

[gcode_macro RESET_ACTIVE_LANE]
gcode:
    TR_RESET_ACTIVE_LANE

[gcode_macro LOCATE_SELECTOR]
gcode:
    TR_LOCATE_SELECTOR
